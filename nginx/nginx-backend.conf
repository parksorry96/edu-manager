# nginx/nginx-backend.conf
# EC2에서 Spring Boot 백엔드를 위한 Nginx 설정

upstream backend {
    server localhost:8080;
}

server {
    listen 80;
    server_name api.yourdomain.com;  # 실제 도메인으로 변경
    
    # 로그 설정
    access_log /var/log/nginx/edu-manager-access.log;
    error_log /var/log/nginx/edu-manager-error.log;
    
    # 파일 업로드 크기 제한
    client_max_body_size 50M;
    
    # 헬스체크 엔드포인트
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Spring Boot Actuator
    location /actuator {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 내부 IP에서만 접근 가능
        allow 10.0.0.0/16;
        deny all;
    }
    
    # API 요청 프록시
    location /api {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS 설정 (Spring Security에서 처리하는 경우 제거)
        # add_header 'Access-Control-Allow-Origin' '*';
        # add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
        # add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
        
        # 타임아웃 설정
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # 정적 파일 (업로드된 파일 등)
    location /uploads {
        alias /home/ubuntu/edu-manager/uploads;
        expires 7d;
        add_header Cache-Control "public, immutable";
    }
    
    # 기본 요청 처리
    location / {
        return 404;
    }
}

# HTTPS 설정 (Let's Encrypt 사용시)
# server {
#     listen 443 ssl http2;
#     server_name api.yourdomain.com;
#     
#     ssl_certificate /etc/letsencrypt/live/api.yourdomain.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/api.yourdomain.com/privkey.pem;
#     
#     # SSL 설정
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;
#     ssl_prefer_server_ciphers on;
#     
#     # 나머지 설정은 위와 동일
# }
